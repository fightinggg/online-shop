server:
  port: 8083

spring:
  application:
    name: orders
  datasource:
    url: jdbc:mysql:// localhost:3306/shop?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=UTC
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: myGroup
  redis:
    # redis数据库索引（默认为0），我们使用索引为3的数据库，避免和其他数据库冲突
    database: 0
    # redis服务器地址（默认为localhost）
    host: localhost
    # redis端口（默认为6379）
    port: 6379
    # redis访问密码（默认为空）
    password:
    # redis连接超时时间（单位为毫秒）
    timeout: 1000ms
    # redis连接池配置
  cache:
    cache-names: orders
  cloud:
    stream:
      default-binder: kafka #默认的绑定器，
      kafka: #如果用的是rabbitMQ这里填 rabbit
        binder:
          brokers: #Kafka的消息中间件服务器地址
            - localhost:9092
      bindings:
        output: #通道名称
          binder: kafka
          destination: online-shop-msg #消息发往的目的地，对应topic
          group: online-shop-msg-group #对应kafka的group
          content-type: text/plain #消息的格式
  data:
    mongodb:
      uri: mongodb://localhost:27017/shop


feign:
  hystrix:
    enabled: true
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: basic


rocketmq:
  name-server: localhost:9876
  producer:
    group: ordersProducer



eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
#
##showSql
#logging:
#  level:
#    com:
#      example:
#        mapper : debug