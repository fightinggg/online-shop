<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shop.cart.mapper.CartMapper" >
  <resultMap id="BaseResultMap" type="com.shop.cart.entity.Cart" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="global_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="buyer_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="goods_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="counts" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="address_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, global_id, buyer_id, goods_id, counts, address_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shop.cart.entity.CartExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_shopping_cart
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_shopping_cart
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_shopping_cart
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.shop.cart.entity.CartExample" >
    delete from tb_shopping_cart
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shop.cart.entity.Cart" >
    insert into tb_shopping_cart (id, global_id, buyer_id, 
      goods_id, counts, address_id
      )
    values (#{id,jdbcType=INTEGER}, #{globalId,jdbcType=BIGINT}, #{buyerId,jdbcType=INTEGER}, 
      #{goodsId,jdbcType=INTEGER}, #{counts,jdbcType=INTEGER}, #{addressId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.shop.cart.entity.Cart" >
    insert into tb_shopping_cart
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="globalId != null" >
        global_id,
      </if>
      <if test="buyerId != null" >
        buyer_id,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="counts != null" >
        counts,
      </if>
      <if test="addressId != null" >
        address_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="globalId != null" >
        #{globalId,jdbcType=BIGINT},
      </if>
      <if test="buyerId != null" >
        #{buyerId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="counts != null" >
        #{counts,jdbcType=INTEGER},
      </if>
      <if test="addressId != null" >
        #{addressId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shop.cart.entity.CartExample" resultType="java.lang.Integer" >
    select count(*) from tb_shopping_cart
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_shopping_cart
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.globalId != null" >
        global_id = #{record.globalId,jdbcType=BIGINT},
      </if>
      <if test="record.buyerId != null" >
        buyer_id = #{record.buyerId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null" >
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.counts != null" >
        counts = #{record.counts,jdbcType=INTEGER},
      </if>
      <if test="record.addressId != null" >
        address_id = #{record.addressId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_shopping_cart
    set id = #{record.id,jdbcType=INTEGER},
      global_id = #{record.globalId,jdbcType=BIGINT},
      buyer_id = #{record.buyerId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      counts = #{record.counts,jdbcType=INTEGER},
      address_id = #{record.addressId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shop.cart.entity.Cart" >
    update tb_shopping_cart
    <set >
      <if test="globalId != null" >
        global_id = #{globalId,jdbcType=BIGINT},
      </if>
      <if test="buyerId != null" >
        buyer_id = #{buyerId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="counts != null" >
        counts = #{counts,jdbcType=INTEGER},
      </if>
      <if test="addressId != null" >
        address_id = #{addressId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shop.cart.entity.Cart" >
    update tb_shopping_cart
    set global_id = #{globalId,jdbcType=BIGINT},
      buyer_id = #{buyerId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      counts = #{counts,jdbcType=INTEGER},
      address_id = #{addressId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>